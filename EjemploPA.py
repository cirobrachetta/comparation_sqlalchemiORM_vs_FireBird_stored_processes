import fdb
import time

# Ruta completa al archivo de base de datos
ruta_db = 'C:\\Users\\cirob\\OneDrive\\Escritorio\\Archivos VSC 2\\base de datos\\actividad ev ORM\\examplePA.fdb'

try:
    fdb.create_database(
        dsn=f'localhost:{ruta_db}',
        user='sysdba',
        password='masterkey'
    )
    print("Base de datos creada exitosamente.")
except fdb.Error as e:
    if "Error while trying to create file" in str(e):
        print("La base de datos ya existe.")
    else:
        print(f"Error al crear la base de datos: {e}")
        exit()

# Intentar conectar a la base de datos
try:
    conexion = fdb.connect(
        dsn=f'localhost:{ruta_db}',
        user='sysdba',
        password='masterkey'
    )
    print("Conectado a la base de datos exitosamente.")
except fdb.Error as e:
    print(f"Error al conectar a la base de datos: {e}")
    exit()

# Crear un cursor para ejecutar comandos SQL
cursor = conexion.cursor()

# Verificar si la tabla 'usuarios' ya existe antes de crearla
try:
    cursor.execute("SELECT 1 FROM rdb$relations WHERE rdb$relation_name = 'USUARIOS'")
    if not cursor.fetchone():
        cursor.execute('''
            CREATE TABLE usuarios (
                id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                nombre VARCHAR(255),
                email VARCHAR(255)
            )
        ''')
        print("Tabla 'usuarios' creada exitosamente.")
    else:
        print("La tabla 'usuarios' ya existe.")
except fdb.Error as e:
    print(f"Error al verificar o crear la tabla 'usuarios': {e}")

# Verificar si el procedimiento almacenado 'agregar_usuario' ya existe antes de crearlo
try:
    cursor.execute("SELECT 1 FROM rdb$procedures WHERE rdb$procedure_name = 'AGREGAR_USUARIO'")
    if not cursor.fetchone():
        cursor.execute('''
            CREATE PROCEDURE agregar_usuario (
                nombre VARCHAR(255),
                email VARCHAR(255)
            )
            AS
            BEGIN
                INSERT INTO usuarios (nombre, email) VALUES (:nombre, :email);
            END
        ''')
        print("Procedimiento almacenado 'agregar_usuario' creado exitosamente.")
    else:
        print("El procedimiento almacenado 'agregar_usuario' ya existe.")
except fdb.Error as e:
    print(f"Error al verificar o crear el procedimiento almacenado 'agregar_usuario': {e}")

conexion.commit()

# Función para agregar un usuario usando el procedimiento almacenado
def agregar_usuario(nombre, email):
    try:
        # Medir el tiempo de inicio
        start_time = time.time()

        # Llamar al procedimiento almacenado
        cursor.callproc('agregar_usuario', (nombre, email))
        conexion.commit()

        # Medir el tiempo de fin
        end_time = time.time()

        # Calcular y mostrar el tiempo de ejecución
        execution_time = end_time - start_time
        print(f"Usuario agregado exitosamente. Tiempo de ejecución: {execution_time:.6f} segundos.")

    except fdb.Error as e:
        print(f"Error al agregar usuario: {e}")

# Función para consultar usuarios
def consultar_usuarios():
    cursor.execute("SELECT * FROM usuarios")
    usuarios = cursor.fetchall()
    return usuarios

# Agregar un usuario
agregar_usuario('Ciro', 'ciro@example.com')

# Consultar y mostrar los usuarios
usuarios = consultar_usuarios()
for usuario in usuarios:
    print(usuario)

# Cerrar la conexión
cursor.close()
conexion.close()